<!DOCTYPE html><html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>WordWhiz</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(to bottom right, #6dd5ed, #2193b0);
      color: #fff;
      text-align: center;
      margin: 0;
      padding: 20px;
    }
    h1 {
      font-size: 2.5rem;
      margin-bottom: 10px;
    }
    .board, .keyboard {
      margin: 20px auto;
      display: grid;
      gap: 10px;
    }
    .board {
      grid-template-columns: repeat(5, 60px);
    }
    .tile {
      width: 60px;
      height: 60px;
      background-color: #333;
      border-radius: 8px;
      font-size: 2rem;
      line-height: 60px;
    }
    .keyboard {
      grid-template-columns: repeat(10, 1fr);
      max-width: 600px;
    }
    .key {
      padding: 10px;
      background-color: #444;
      border-radius: 6px;
      cursor: pointer;
    }
    .key:hover {
      background-color: #666;
    }
    .feedback, .meaning, .image, .feedback-form {
      margin-top: 20px;
    }
    .feedback-form textarea {
      width: 100%;
      padding: 10px;
      border-radius: 6px;
    }
    .button {
      background-color: #ff9800;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      margin-top: 10px;
      cursor: pointer;
    }
    .button:hover {
      background-color: #e68900;
    }
  </style>
</head>
<body>
  <h1>WordWhiz</h1>
  <div class="board" id="board"></div>
  <div class="keyboard" id="keyboard"></div> <div class="feedback" id="feedback"></div>
  <div class="meaning" id="meaning"></div>
  <div class="image" id="image"></div> <div class="feedback-form" id="feedback-form">
    <h3>How was your experience playing WordWhiz?</h3>
    <textarea rows="4" placeholder="Tell us what you liked or what we can improve..."></textarea><br/>
    <button class="button">Submit Feedback</button>
  </div> <script>
    const wordList = ['apple', 'grape', 'plane', 'stone', 'tiger'];
    const meanings = {
      'apple': {
        en: 'A fruit that is red, green, or yellow.',
        es: 'Una fruta que es roja, verde o amarilla.',
        hi: 'ऐक फल जो लाल, हरी या पीली हो सकती है।',
        img: 'https://source.unsplash.com/featured/?apple'
      },
      'grape': {
        en: 'A small, round fruit used to make wine.',
        es: 'Una fruta pequeña y redonda que se usa para hacer vino.',
        hi: 'छोटी और गोल अंगूर जिसका उपयोग द्राक बनाने में किया जाता है।',
        img: 'https://source.unsplash.com/featured/?grapes'
      },
      'plane': {
        en: 'A flying vehicle with wings.',
        es: 'Un vehículo volador con alas.',
        hi: 'एक उडनेक यान जिसके पंख होती हैं।',
        img: 'https://source.unsplash.com/featured/?airplane'
      },
      'stone': {
        en: 'A hard, solid nonmetallic mineral.',
        es: 'Un mineral sólido y duro.',
        hi: 'कठोर और ठोस चट्टान खनिज की टट्टी खनिजाईं गयी जाती हैं।',
        img: 'https://source.unsplash.com/featured/?stone'
      },
      'tiger': {
        en: 'A large wild cat with stripes.',
        es: 'Un gran felino salvaje con rayas.',
        hi: 'एक बड़ी जंगली जो काली और धारीयों के साथ चालता है।',
        img: 'https://source.unsplash.com/featured/?tiger'
      }
    };

    let targetWord = wordList[Math.floor(Math.random() * wordList.length)];
    let currentGuess = '';
    let attempts = 0;

    const board = document.getElementById('board');
    const keyboard = document.getElementById('keyboard');
    const feedback = document.getElementById('feedback');
    const meaning = document.getElementById('meaning');
    const image = document.getElementById('image');

    function createBoard() {
      board.innerHTML = '';
      for (let i = 0; i < 30; i++) {
        let tile = document.createElement('div');
        tile.className = 'tile';
        board.appendChild(tile);
      }
    }

    function createKeyboard() {
      const keys = 'QWERTYUIOPASDFGHJKLZXCVBNM';
      for (let char of keys) {
        let key = document.createElement('div');
        key.className = 'key';
        key.textContent = char;
        key.addEventListener('click', () => handleKey(char));
        keyboard.appendChild(key);
      }
      let enter = document.createElement('div');
      enter.className = 'key';
      enter.textContent = 'Enter';
      enter.addEventListener('click', submitGuess);
      keyboard.appendChild(enter);

      let del = document.createElement('div');
      del.className = 'key';
      del.textContent = 'Del';
      del.addEventListener('click', () => {
        currentGuess = currentGuess.slice(0, -1);
        updateBoard();
      });
      keyboard.appendChild(del);
    }

    function updateBoard() {
      const tiles = document.querySelectorAll('.tile');
      tiles.forEach((tile, index) => {
        if (index >= attempts * 5 && index < (attempts + 1) * 5) {
          tile.textContent = currentGuess[index % 5] || '';
        }
      });
    }

    function handleKey(letter) {
      if (currentGuess.length < 5) {
        currentGuess += letter.toLowerCase();
        updateBoard();
      }
    }

    function submitGuess() {
      if (currentGuess.length !== 5) return;
      const rowStart = attempts * 5;
      const tiles = document.querySelectorAll('.tile');

      for (let i = 0; i < 5; i++) {
        let tile = tiles[rowStart + i];
        if (currentGuess[i] === targetWord[i]) tile.style.backgroundColor = 'green';
        else if (targetWord.includes(currentGuess[i])) tile.style.backgroundColor = 'orange';
        else tile.style.backgroundColor = 'gray';
      }

      if (currentGuess === targetWord) {
        feedback.innerHTML = '<h2>Well done! You guessed it!</h2>';
        showMeaning();
      } else {
        attempts++;
        if (attempts === 6) {
          feedback.innerHTML = `<h2>Try one more time!</h2><button class='button' onclick='restartGame()'>Restart</button>`;
          showMeaning();
        }
        currentGuess = '';
      }
    }

    function showMeaning() {
      const def = meanings[targetWord];
      meaning.innerHTML = `
        <h3>Word Meaning</h3>
        <p><strong>English:</strong> ${def.en}</p>
        <p><strong>Spanish:</strong> ${def.es}</p>
        <p><strong>Hindi:</strong> ${def.hi}</p>
      `;
      image.innerHTML = `<img src="${def.img}" alt="${targetWord}" style="max-width:200px; border-radius: 10px;" />`;
    }

    function restartGame() {
      location.reload();
    }

    createBoard();
    createKeyboard();
  </script></body>
</html>
